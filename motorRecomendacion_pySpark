{"cells":[{"cell_type":"markdown","source":["Motor de recomendación con PySpark\n\nPara la realización de esta tarea se utilizará el dataset que contiene 100000 puntuaciones de 943 usuarios sobre 1682 películas de Movielens. Se recomienda leer el fichero README.txt para entender el dataset.\nEl objetivo es crear un recomendador utilizando PySpark para futuros usuarios basandose en los datos historicos. Se utilizara el algoritmo ALS.\nLos pasos a seguir son:\n  \n- Cargar los datos en un dataframe\n- Transformar el dataframe para dejarlo listo si fuese necesario\n- Crear un modelo para predecir la puntuacion de cada usuario-película\n- Valorar la calidad con el conjunto de test"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"07e6a468-6ffa-4b20-beca-4d1937e6332e"}}},{"cell_type":"markdown","source":["Preparación del entorno: paquetes y variables¶\nLo primero que vamos hacer es importar todos los paquetes necesarios y crear el contexto para los data frames (SQLContext)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"a3ea8c1e-ec28-4eb8-8647-14e59a996fc8"}}},{"cell_type":"code","source":["\nimport re\nfrom pyspark.sql import SQLContext, Row\nfrom pyspark.sql.types import *\nfrom pyspark.sql.functions import *\nfrom pyspark.ml.evaluation import RegressionEvaluator\nfrom pyspark.ml.tuning import CrossValidator, ParamGridBuilder\nfrom pyspark.ml.recommendation import ALS, ALSModel\n\nimport numpy as np\nfrom sklearn.metrics import roc_curve, auc\n\nsqlc = SQLContext(sc)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"4bc204c8-8770-40a3-99c1-aa5ec3fb9004"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[],"data":"<div class=\"ansiout\"></div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\"></div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["A continuación se crean las variables para:\nLas rutas y nombres de los siguientes ficheros: puntuaciones usuario-película, información de los usuarios, información de las películas, información de las categorías de las películas\nEl separador de los campos en los ficheros que pueden ser un pipe o un tabulador\nEl nombre y posición de las columnas de los ficheros; además del tipo de dato que será en el dataframe"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"4a810711-9380-4393-81ba-4fdd4ffed467"}}},{"cell_type":"code","source":["# Rutas y nombres de los ficheros y separador por defecto que utiliza\nRUTA_FICHERO_PUNTUACION = '/FileStore/tables/u.data'\nRUTA_FICHERO_USUARIO = '/FileStore/tables/u.user'\nRUTA_FICHERO_ITEM = '/FileStore/tables/u.item'\nRUTA_FICHERO_GENERO = '/FileStore/tables/u.genre'\nSEPARADOR_TABULADOR = '\\t'\nSEPARADOR_PIPE = '|'\n\n# Variables con información de las columnas de los ficheros: \n#    - posicion 0: nombre de la columna en el fichero\n#    - posicion 1: posicion de la columna en el fichero\n#    - posicion 2: tipo dataframe\n#    - posicion 3: True si la columna puede ser nullable. Se utilizara al convertir de RDD a dataframe.\n# Se crea también una lista con ellos dentro por si se quiere iterar\n# Fichero puntuaciones\nCOL_PUNTUACION_USERID = ('userid', 0, IntegerType(), True)\nCOL_PUNTUACION_ITEMID = ('itemid', 1, IntegerType(), True)\nCOL_PUNTUACION_RATING = ('rating', 2, FloatType(), True)\nCOL_PUNTUACION_TIMESTAMP = ('timestamp', 3, IntegerType(), True)\nCOL_PUNTUACION_PREDICTION = ('prediction', None, None, None)\nCOL_PUNTUACION_NUMEROPUNTUACIONES = ('numero_puntuaciones', None, None, None)\nCOLS_PUNTUACION = (\n    COL_PUNTUACION_USERID, \n    COL_PUNTUACION_ITEMID, \n    COL_PUNTUACION_RATING, \n    COL_PUNTUACION_TIMESTAMP)\n# Fichero usuario\nCOL_USUARIO_ID = ('user_userid', 0, IntegerType(), True)\nCOL_USUARIO_AGE = ('age', 1, IntegerType(), True)\nCOL_USUARIO_GENDER = ('gender', 2, StringType(), True)\nCOL_USUARIO_OCCUPATION = ('occupation', 3, StringType(), True)\nCOL_USUARIO_ZIPCODE = ('zipcode', 4, StringType(), True)\nCOLS_USUARIO = (\n    COL_USUARIO_ID, \n    COL_USUARIO_AGE, \n    COL_USUARIO_GENDER, \n    COL_USUARIO_OCCUPATION,\n    COL_USUARIO_ZIPCODE)\n# Fichero genero\nCOL_GENERO_NAME = ('name', 0, StringType(), False)\nCOL_GENERO_ID = ('genre_genreid', 1, IntegerType(), False)\nCOLS_GENERO = (\n    COL_GENERO_NAME, \n    COL_GENERO_ID)\n# Fichero item\nCOL_ITEM_ID = ('item_itemid', 0, IntegerType(), False)\nCOL_ITEM_TITLE = ('title', 1, StringType(), False)\nCOL_ITEM_RELEASEDATE = ('releasedate', 2, StringType(), False)\nCOL_ITEM_VIDERELEASEDATE = ('videoreleasedate', 3, StringType(), False)\nCOL_ITEM_IMDBURL = ('imdburl', 4, StringType(), False)\nCOL_ITEM_UNKNOWN = ('unknown', 5, IntegerType(), False)\nCOL_ITEM_ACTION = ('action', 6, IntegerType(), False)\nCOL_ITEM_ADVENTURE = ('adventure', 7, IntegerType(), False)\nCOL_ITEM_ANIMATION = ('animation', 8, IntegerType(), False)\nCOL_ITEM_CHILDRENS = ('childrens', 9, IntegerType(), False)\nCOL_ITEM_COMEDY = ('comedy', 10, IntegerType(), False)\nCOL_ITEM_CRIME = ('crime', 11, IntegerType(), False)\nCOL_ITEM_DOCUMENTARY = ('documentary', 12, IntegerType(), False)\nCOL_ITEM_DRAMA = ('drama', 13, IntegerType(), False)\nCOL_ITEM_FANTASY = ('fantasy', 14, IntegerType(), False)\nCOL_ITEM_FILMNOIR = ('filmnoir', 15, IntegerType(), False)\nCOL_ITEM_HORROR = ('horror', 16, IntegerType(), False)\nCOL_ITEM_MUSICAL = ('musical', 17, IntegerType(), False)\nCOL_ITEM_MYSTERY = ('mystery', 18, IntegerType(), False)\nCOL_ITEM_ROMACE = ('Romance', 19, IntegerType(), False)\nCOL_ITEM_SCIFI = ('scifi', 20, IntegerType(), False)\nCOL_ITEM_THRILLER = ('thriller', 21, IntegerType(), False)\nCOL_ITEM_WAR = ('war', 22, IntegerType(), False)\nCOL_ITEM_WESTERN = ('western', 23, IntegerType(), False)\nCOL_ITEM_GENEROS = ('generos', None, ArrayType(StringType()), False)\nCOL_ITEM_GENERO = ('genero', None, None, None)\nCOLS_ITEM = (\n    COL_ITEM_ID, \n    COL_ITEM_TITLE,\n    COL_ITEM_RELEASEDATE,\n    COL_ITEM_VIDERELEASEDATE,\n    COL_ITEM_IMDBURL)\nCOLS_ITEM_TODOSGENEROS = (\n    COL_ITEM_UNKNOWN,\n    COL_ITEM_ACTION, \n    COL_ITEM_ADVENTURE,\n    COL_ITEM_ANIMATION,\n    COL_ITEM_CHILDRENS,\n    COL_ITEM_COMEDY,\n    COL_ITEM_CRIME,\n    COL_ITEM_DOCUMENTARY,\n    COL_ITEM_DRAMA,\n    COL_ITEM_FANTASY,\n    COL_ITEM_FILMNOIR,\n    COL_ITEM_HORROR,\n    COL_ITEM_MUSICAL,\n    COL_ITEM_MYSTERY,\n    COL_ITEM_ROMACE,\n    COL_ITEM_SCIFI,\n    COL_ITEM_THRILLER,\n    COL_ITEM_WAR,\n    COL_ITEM_WESTERN)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"36f4b0dd-8148-4485-802e-fe26132cf56e"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[],"data":"<div class=\"ansiout\"></div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\"></div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["Carga del dataframe y acciones\nLo primero es cargar los dataframes:\nPuntuaciones: se elimina el timestamp ya que se considera que no es importante.\nUsuarios: no se eliminará ningún campo ya que todos los atributos (edad, sexo, profesión, código postal) pueden ser importantes a la hora de hacer un posterior análisis. Se podría discutir si el código postal es importante pero para mí sí lo es ya que dependiendo de la zona podrían tener gustos distintos.\nItem: se eliminará release date, video release date y IMDb URL ya son atributos que no aportan mucha información. De nuevo, se podría debatir si la fecha es importante o no ya que puede haber usuarios a los que les guste sólo las películas antiguas; yo no lo he considerado así.\nGénero: los dos atributos son necesarios ya que uno es el id o posición en el fichero Item y el otro el nombre del género."],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"3b3ab0ec-669a-485c-84f1-ba632395e770"}}},{"cell_type":"code","source":["# Se carga las puntuaciones utilizando COLS_PUNTUACION y después se elimina el timestamp\nesquemaPuntuacion = StructType()\nfor col in COLS_PUNTUACION:\n    esquemaPuntuacion.add(StructField(col[0], col[2], col[3]))\ndataframePuntuacion = sqlc.read.format('com.databricks.spark.csv'). \\\n                option('delimiter', SEPARADOR_TABULADOR). \\\n                option('header', 'false'). \\\n                load(RUTA_FICHERO_PUNTUACION, schema=esquemaPuntuacion)\ncabecerasReducidas = list()\nfor col in COLS_PUNTUACION:\n    if col[0] != COL_PUNTUACION_TIMESTAMP[0]:\n        cabecerasReducidas.append(col[0])\ndataframePuntuacion = dataframePuntuacion.select(cabecerasReducidas)\n\n# Se carga los usuarios utilizando COLS_USUARIO\nesquemaUsuario = StructType()\nfor col in COLS_USUARIO:\n    esquemaUsuario.add(StructField(col[0], col[2], col[3]))\ndataframeUsuario = sqlc.read.format('com.databricks.spark.csv'). \\\n                option('delimiter', SEPARADOR_PIPE). \\\n                option('header', 'false'). \\\n                load(RUTA_FICHERO_USUARIO, schema=esquemaUsuario)\n\n# Se carga los items utilizando COLS_ITEM y COLS_ITEM_TODOSGENEROS\nesquemaItem = StructType()\nfor col in COLS_ITEM:\n    esquemaItem.add(StructField(col[0], col[2], col[3]))\nfor col in COLS_ITEM_TODOSGENEROS:\n    esquemaItem.add(StructField(col[0], col[2], col[3]))\ndataframeItem = sqlc.read.format('com.databricks.spark.csv'). \\\n                option('delimiter', SEPARADOR_PIPE). \\\n                option('header', 'false'). \\\n                load(RUTA_FICHERO_ITEM, schema=esquemaItem)\ncabecerasReducidas = list()\nfor col in COLS_ITEM:\n    if col[0] == COL_ITEM_ID[0] or col[0] == COL_ITEM_TITLE[0]:\n        cabecerasReducidas.append(col[0])\nfor col in COLS_ITEM_TODOSGENEROS:\n    cabecerasReducidas.append(col[0])\ndataframeItem = dataframeItem.select(cabecerasReducidas)\n\n# Se carga los géneros utilizando COLS_GENERO\nesquemaGenero = StructType()\nfor col in COLS_GENERO:\n    esquemaGenero.add(StructField(col[0], col[2], col[3]))\ndataframeGenero = sqlc.read.format('com.databricks.spark.csv'). \\\n                option('delimiter', SEPARADOR_PIPE). \\\n                option('header', 'false'). \\\n                load(RUTA_FICHERO_GENERO, schema=esquemaGenero)\n\ndataframePuntuacion.show(4)\ndataframeUsuario.show(4)\ndataframeItem.show(4)\ndataframeGenero.show(4)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"9dfe71d0-fd3e-43ae-bea5-4bb98ba19cee"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[{"name":"dataframePuntuacion","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"userid","nullable":true,"type":"integer"},{"metadata":{},"name":"itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"rating","nullable":true,"type":"float"}],"type":"struct"},"tableIdentifier":null},{"name":"dataframeUsuario","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"user_userid","nullable":true,"type":"integer"},{"metadata":{},"name":"age","nullable":true,"type":"integer"},{"metadata":{},"name":"gender","nullable":true,"type":"string"},{"metadata":{},"name":"occupation","nullable":true,"type":"string"},{"metadata":{},"name":"zipcode","nullable":true,"type":"string"}],"type":"struct"},"tableIdentifier":null},{"name":"dataframeItem","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"item_itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"title","nullable":true,"type":"string"},{"metadata":{},"name":"unknown","nullable":true,"type":"integer"},{"metadata":{},"name":"action","nullable":true,"type":"integer"},{"metadata":{},"name":"adventure","nullable":true,"type":"integer"},{"metadata":{},"name":"animation","nullable":true,"type":"integer"},{"metadata":{},"name":"childrens","nullable":true,"type":"integer"},{"metadata":{},"name":"comedy","nullable":true,"type":"integer"},{"metadata":{},"name":"crime","nullable":true,"type":"integer"},{"metadata":{},"name":"documentary","nullable":true,"type":"integer"},{"metadata":{},"name":"drama","nullable":true,"type":"integer"},{"metadata":{},"name":"fantasy","nullable":true,"type":"integer"},{"metadata":{},"name":"filmnoir","nullable":true,"type":"integer"},{"metadata":{},"name":"horror","nullable":true,"type":"integer"},{"metadata":{},"name":"musical","nullable":true,"type":"integer"},{"metadata":{},"name":"mystery","nullable":true,"type":"integer"},{"metadata":{},"name":"Romance","nullable":true,"type":"integer"},{"metadata":{},"name":"scifi","nullable":true,"type":"integer"},{"metadata":{},"name":"thriller","nullable":true,"type":"integer"},{"metadata":{},"name":"war","nullable":true,"type":"integer"},{"metadata":{},"name":"western","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null},{"name":"dataframeGenero","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"name","nullable":true,"type":"string"},{"metadata":{},"name":"genre_genreid","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"data":"<div class=\"ansiout\">+------+------+------+\n|userid|itemid|rating|\n+------+------+------+\n|   196|   242|   3.0|\n|   186|   302|   3.0|\n|    22|   377|   1.0|\n|   244|    51|   2.0|\n+------+------+------+\nonly showing top 4 rows\n\n+-----------+---+------+----------+-------+\n|user_userid|age|gender|occupation|zipcode|\n+-----------+---+------+----------+-------+\n|          1| 24|     M|technician|  85711|\n|          2| 53|     F|     other|  94043|\n|          3| 23|     M|    writer|  32067|\n|          4| 24|     M|technician|  43537|\n+-----------+---+------+----------+-------+\nonly showing top 4 rows\n\n+-----------+-----------------+-------+------+---------+---------+---------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+---+-------+\n|item_itemid|            title|unknown|action|adventure|animation|childrens|comedy|crime|documentary|drama|fantasy|filmnoir|horror|musical|mystery|Romance|scifi|thriller|war|western|\n+-----------+-----------------+-------+------+---------+---------+---------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+---+-------+\n|          1| Toy Story (1995)|      0|     0|        0|        1|        1|     1|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       0|  0|      0|\n|          2| GoldenEye (1995)|      0|     1|        1|        0|        0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1|  0|      0|\n|          3|Four Rooms (1995)|      0|     0|        0|        0|        0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1|  0|      0|\n|          4|Get Shorty (1995)|      0|     1|        0|        0|        0|     1|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|  0|      0|\n+-----------+-----------------+-------+------+---------+---------+---------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+---+-------+\nonly showing top 4 rows\n\n+---------+-------------+\n|     name|genre_genreid|\n+---------+-------------+\n|  unknown|            0|\n|   Action|            1|\n|Adventure|            2|\n|Animation|            3|\n+---------+-------------+\nonly showing top 4 rows\n\n</div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\">+------+------+------+\nuserid|itemid|rating|\n+------+------+------+\n   196|   242|   3.0|\n   186|   302|   3.0|\n    22|   377|   1.0|\n   244|    51|   2.0|\n+------+------+------+\nonly showing top 4 rows\n\n+-----------+---+------+----------+-------+\nuser_userid|age|gender|occupation|zipcode|\n+-----------+---+------+----------+-------+\n          1| 24|     M|technician|  85711|\n          2| 53|     F|     other|  94043|\n          3| 23|     M|    writer|  32067|\n          4| 24|     M|technician|  43537|\n+-----------+---+------+----------+-------+\nonly showing top 4 rows\n\n+-----------+-----------------+-------+------+---------+---------+---------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+---+-------+\nitem_itemid|            title|unknown|action|adventure|animation|childrens|comedy|crime|documentary|drama|fantasy|filmnoir|horror|musical|mystery|Romance|scifi|thriller|war|western|\n+-----------+-----------------+-------+------+---------+---------+---------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+---+-------+\n          1| Toy Story (1995)|      0|     0|        0|        1|        1|     1|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       0|  0|      0|\n          2| GoldenEye (1995)|      0|     1|        1|        0|        0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1|  0|      0|\n          3|Four Rooms (1995)|      0|     0|        0|        0|        0|     0|    0|          0|    0|      0|       0|     0|      0|      0|      0|    0|       1|  0|      0|\n          4|Get Shorty (1995)|      0|     1|        0|        0|        0|     1|    0|          0|    1|      0|       0|     0|      0|      0|      0|    0|       0|  0|      0|\n+-----------+-----------------+-------+------+---------+---------+---------+------+-----+-----------+-----+-------+--------+------+-------+-------+-------+-----+--------+---+-------+\nonly showing top 4 rows\n\n+---------+-------------+\n     name|genre_genreid|\n+---------+-------------+\n  unknown|            0|\n   Action|            1|\nAdventure|            2|\nAnimation|            3|\n+---------+-------------+\nonly showing top 4 rows\n\n</div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["Se mira que no haya ningún NULL o NAN y después se añade los atributos de los usuarios y de las películas al dataframe de puntuaciones por si los atributos pueden ser de utilidad al modelo ALS."],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"040055c6-090e-4b3a-ab1b-d465af060e3a"}}},{"cell_type":"code","source":["# Número de NAN y NULL en rating\nprint (\"Numero de filas NAN Y NULL de la columna Rating \")\nprint (\"Nan: \", dataframePuntuacion.where(isnan(COL_PUNTUACION_RATING[0])).count())\nprint (\"Null: \", dataframePuntuacion.where(isnull(COL_PUNTUACION_RATING[0])).count())\n\n# Join puntuaciones-usuarios-item\ndataframePuntuacionUsuarioItem = dataframePuntuacion. \\\n                                  join(dataframeUsuario, dataframePuntuacion.userid==dataframeUsuario.user_userid, 'left_outer'). \\\n                                  join(dataframeItem, dataframePuntuacion.itemid==dataframeItem.item_itemid, 'left_outer')\n# Se eliminan las columnas duplicadas\ncabecerasReducidas = list()\nfor col in dataframePuntuacionUsuarioItem.columns:\n    if col != COL_USUARIO_ID[0] and col !=COL_ITEM_ID[0] :\n        cabecerasReducidas.append(col)\ndataframePuntuacionUsuarioItem = dataframePuntuacionUsuarioItem.select(cabecerasReducidas)\n\nprint(\"Columnas y filas de dataframe\")\nprint (\"Columnas: \", dataframePuntuacionUsuarioItem.columns)\nprint (\"Filas: \", dataframePuntuacionUsuarioItem.count())"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"909d3189-0037-44e5-8516-80cdeaf1ce37"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[{"name":"dataframePuntuacionUsuarioItem","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"userid","nullable":true,"type":"integer"},{"metadata":{},"name":"itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"rating","nullable":true,"type":"float"},{"metadata":{},"name":"age","nullable":true,"type":"integer"},{"metadata":{},"name":"gender","nullable":true,"type":"string"},{"metadata":{},"name":"occupation","nullable":true,"type":"string"},{"metadata":{},"name":"zipcode","nullable":true,"type":"string"},{"metadata":{},"name":"title","nullable":true,"type":"string"},{"metadata":{},"name":"unknown","nullable":true,"type":"integer"},{"metadata":{},"name":"action","nullable":true,"type":"integer"},{"metadata":{},"name":"adventure","nullable":true,"type":"integer"},{"metadata":{},"name":"animation","nullable":true,"type":"integer"},{"metadata":{},"name":"childrens","nullable":true,"type":"integer"},{"metadata":{},"name":"comedy","nullable":true,"type":"integer"},{"metadata":{},"name":"crime","nullable":true,"type":"integer"},{"metadata":{},"name":"documentary","nullable":true,"type":"integer"},{"metadata":{},"name":"drama","nullable":true,"type":"integer"},{"metadata":{},"name":"fantasy","nullable":true,"type":"integer"},{"metadata":{},"name":"filmnoir","nullable":true,"type":"integer"},{"metadata":{},"name":"horror","nullable":true,"type":"integer"},{"metadata":{},"name":"musical","nullable":true,"type":"integer"},{"metadata":{},"name":"mystery","nullable":true,"type":"integer"},{"metadata":{},"name":"Romance","nullable":true,"type":"integer"},{"metadata":{},"name":"scifi","nullable":true,"type":"integer"},{"metadata":{},"name":"thriller","nullable":true,"type":"integer"},{"metadata":{},"name":"war","nullable":true,"type":"integer"},{"metadata":{},"name":"western","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"data":"<div class=\"ansiout\">Numero de filas NAN Y NULL de la columna Rating \nNan:  0\nNull:  0\nColumnas y filas de dataframe\nColumnas:  [&#39;userid&#39;, &#39;itemid&#39;, &#39;rating&#39;, &#39;age&#39;, &#39;gender&#39;, &#39;occupation&#39;, &#39;zipcode&#39;, &#39;title&#39;, &#39;unknown&#39;, &#39;action&#39;, &#39;adventure&#39;, &#39;animation&#39;, &#39;childrens&#39;, &#39;comedy&#39;, &#39;crime&#39;, &#39;documentary&#39;, &#39;drama&#39;, &#39;fantasy&#39;, &#39;filmnoir&#39;, &#39;horror&#39;, &#39;musical&#39;, &#39;mystery&#39;, &#39;Romance&#39;, &#39;scifi&#39;, &#39;thriller&#39;, &#39;war&#39;, &#39;western&#39;]\nFilas:  100000\n</div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\">Numero de filas NAN Y NULL de la columna Rating \nNan:  0\nNull:  0\nColumnas y filas de dataframe\nColumnas:  [&#39;userid&#39;, &#39;itemid&#39;, &#39;rating&#39;, &#39;age&#39;, &#39;gender&#39;, &#39;occupation&#39;, &#39;zipcode&#39;, &#39;title&#39;, &#39;unknown&#39;, &#39;action&#39;, &#39;adventure&#39;, &#39;animation&#39;, &#39;childrens&#39;, &#39;comedy&#39;, &#39;crime&#39;, &#39;documentary&#39;, &#39;drama&#39;, &#39;fantasy&#39;, &#39;filmnoir&#39;, &#39;horror&#39;, &#39;musical&#39;, &#39;mystery&#39;, &#39;Romance&#39;, &#39;scifi&#39;, &#39;thriller&#39;, &#39;war&#39;, &#39;western&#39;]\nFilas:  100000\n</div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["Se divide el dataframe entre entrenamiento y test."],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"4281b802-bb95-4e79-a41c-90a806b60497"}}},{"cell_type":"code","source":["dataframePuntuacionUsuarioItem.cache()\n# Se divide el dataframe en entrenamiento y test\ndataframePuntuacionUsuarioItemDividido = dataframePuntuacionUsuarioItem.randomSplit([0.7, 0.3], 1234)\ndataframePuntuacionUsuarioItemEntrenamiento = dataframePuntuacionUsuarioItemDividido[0]\ndataframePuntuacionUsuarioItemTest = dataframePuntuacionUsuarioItemDividido[1]"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"5934ab06-c06f-4767-8a2b-8207db66e7c0"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[{"name":"dataframePuntuacionUsuarioItemEntrenamiento","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"userid","nullable":true,"type":"integer"},{"metadata":{},"name":"itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"rating","nullable":true,"type":"float"},{"metadata":{},"name":"age","nullable":true,"type":"integer"},{"metadata":{},"name":"gender","nullable":true,"type":"string"},{"metadata":{},"name":"occupation","nullable":true,"type":"string"},{"metadata":{},"name":"zipcode","nullable":true,"type":"string"},{"metadata":{},"name":"title","nullable":true,"type":"string"},{"metadata":{},"name":"unknown","nullable":true,"type":"integer"},{"metadata":{},"name":"action","nullable":true,"type":"integer"},{"metadata":{},"name":"adventure","nullable":true,"type":"integer"},{"metadata":{},"name":"animation","nullable":true,"type":"integer"},{"metadata":{},"name":"childrens","nullable":true,"type":"integer"},{"metadata":{},"name":"comedy","nullable":true,"type":"integer"},{"metadata":{},"name":"crime","nullable":true,"type":"integer"},{"metadata":{},"name":"documentary","nullable":true,"type":"integer"},{"metadata":{},"name":"drama","nullable":true,"type":"integer"},{"metadata":{},"name":"fantasy","nullable":true,"type":"integer"},{"metadata":{},"name":"filmnoir","nullable":true,"type":"integer"},{"metadata":{},"name":"horror","nullable":true,"type":"integer"},{"metadata":{},"name":"musical","nullable":true,"type":"integer"},{"metadata":{},"name":"mystery","nullable":true,"type":"integer"},{"metadata":{},"name":"Romance","nullable":true,"type":"integer"},{"metadata":{},"name":"scifi","nullable":true,"type":"integer"},{"metadata":{},"name":"thriller","nullable":true,"type":"integer"},{"metadata":{},"name":"war","nullable":true,"type":"integer"},{"metadata":{},"name":"western","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null},{"name":"dataframePuntuacionUsuarioItemTest","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"userid","nullable":true,"type":"integer"},{"metadata":{},"name":"itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"rating","nullable":true,"type":"float"},{"metadata":{},"name":"age","nullable":true,"type":"integer"},{"metadata":{},"name":"gender","nullable":true,"type":"string"},{"metadata":{},"name":"occupation","nullable":true,"type":"string"},{"metadata":{},"name":"zipcode","nullable":true,"type":"string"},{"metadata":{},"name":"title","nullable":true,"type":"string"},{"metadata":{},"name":"unknown","nullable":true,"type":"integer"},{"metadata":{},"name":"action","nullable":true,"type":"integer"},{"metadata":{},"name":"adventure","nullable":true,"type":"integer"},{"metadata":{},"name":"animation","nullable":true,"type":"integer"},{"metadata":{},"name":"childrens","nullable":true,"type":"integer"},{"metadata":{},"name":"comedy","nullable":true,"type":"integer"},{"metadata":{},"name":"crime","nullable":true,"type":"integer"},{"metadata":{},"name":"documentary","nullable":true,"type":"integer"},{"metadata":{},"name":"drama","nullable":true,"type":"integer"},{"metadata":{},"name":"fantasy","nullable":true,"type":"integer"},{"metadata":{},"name":"filmnoir","nullable":true,"type":"integer"},{"metadata":{},"name":"horror","nullable":true,"type":"integer"},{"metadata":{},"name":"musical","nullable":true,"type":"integer"},{"metadata":{},"name":"mystery","nullable":true,"type":"integer"},{"metadata":{},"name":"Romance","nullable":true,"type":"integer"},{"metadata":{},"name":"scifi","nullable":true,"type":"integer"},{"metadata":{},"name":"thriller","nullable":true,"type":"integer"},{"metadata":{},"name":"war","nullable":true,"type":"integer"},{"metadata":{},"name":"western","nullable":true,"type":"integer"}],"type":"struct"},"tableIdentifier":null}],"data":"<div class=\"ansiout\"></div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\"></div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["Creación del modelo ALS\nSe ha elegido la estrategia de eliminar la fila que cuyo valor sea NAN en la predicción por los siguientes motivos:\n\nSe ha ejecutado 1 vez sin cross validation y se ha visto que de los 29874 puntuaciones del conjunto de test, sólo 57 no tienen valor (0,19%), por lo que no tiene que tener impacto a la hora de valorar el modelo.\n\nSe utiliza cross validation por lo que se tiene que utilizar este método por que si no se obtendrá NAN para el RMSE cuando no se disponga del valor de un elemento.\nSe utiliza el dataframe con todos los datos de puntuaciones-usuarios-películas como se ha comentado antes. \nTiene la desventajas: 1) tarda más en ejecutarse, 2) se necesitan todos estos datos cuando se quiere obtener la predicción de una puntuación para un usuario y 3) si se añade más géneros para las películas se tiene que volver a entrenar. Por su parte, se tendrían que obtener mejores resultados que sólo con el dato de usuario, item y puntuación. Dependiendo de las características del negocio (¿se tiene todos los datos de un usuario?, ¿las categorías son frecuentemente modificadas?) se reducirá o no las columnas del dataframe."],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"84397b9f-8688-4b9b-83d4-104f3596ff0b"}}},{"cell_type":"code","source":["# Evaluador y cross validation\nevaluatorRegression = RegressionEvaluator(labelCol=COL_PUNTUACION_RATING[0])\n\nals = ALS(userCol=COL_PUNTUACION_USERID[0], itemCol=COL_PUNTUACION_ITEMID[0], ratingCol=COL_PUNTUACION_RATING[0], coldStartStrategy='drop')\ngrid = ParamGridBuilder().addGrid(als.rank, [5, 20]).build()\ncrossValidator = CrossValidator(estimator=als, estimatorParamMaps=grid, evaluator=evaluatorRegression, numFolds=2)\ncrossValidatorModel = crossValidator.fit(dataframePuntuacionUsuarioItemEntrenamiento)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"3d38333a-ab31-475d-b532-e098435ef9f3"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[],"data":"<div class=\"ansiout\">MLlib will automatically track trials in MLflow. After your tuning fit() call has completed, view the MLflow UI to see logged runs.\n</div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\">MLlib will automatically track trials in MLflow. After your tuning fit() call has completed, view the MLflow UI to see logged runs.\n</div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["Valoración del modelo\nComo se ha dicho, el modelo descarta las filas que no tienen niguna puntuación en el entrenamiento, por tanto el conjunto de test tendrá 0 NAN. A continuación se muestra como se haría si se hubiese elegido la opción NA y el describe para el de entrenamiento y test para el rating y la predicción:"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"63b1ada7-21e3-4b05-9221-ecb5d41b1a10"}}},{"cell_type":"code","source":["# Se obtiene la predicción para entrenamiento y test\ndataframePuntuacionUsuarioItemEntrenamientoPrediccion = crossValidatorModel.bestModel.transform(dataframePuntuacionUsuarioItemEntrenamiento)\ndataframePuntuacionUsuarioItemTestPrediccion = crossValidatorModel.bestModel.transform(dataframePuntuacionUsuarioItemTest)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"df87e91d-b008-430f-b2fd-f86793dea27a"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[{"name":"dataframePuntuacionUsuarioItemEntrenamientoPrediccion","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"userid","nullable":true,"type":"integer"},{"metadata":{},"name":"itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"rating","nullable":true,"type":"float"},{"metadata":{},"name":"age","nullable":true,"type":"integer"},{"metadata":{},"name":"gender","nullable":true,"type":"string"},{"metadata":{},"name":"occupation","nullable":true,"type":"string"},{"metadata":{},"name":"zipcode","nullable":true,"type":"string"},{"metadata":{},"name":"title","nullable":true,"type":"string"},{"metadata":{},"name":"unknown","nullable":true,"type":"integer"},{"metadata":{},"name":"action","nullable":true,"type":"integer"},{"metadata":{},"name":"adventure","nullable":true,"type":"integer"},{"metadata":{},"name":"animation","nullable":true,"type":"integer"},{"metadata":{},"name":"childrens","nullable":true,"type":"integer"},{"metadata":{},"name":"comedy","nullable":true,"type":"integer"},{"metadata":{},"name":"crime","nullable":true,"type":"integer"},{"metadata":{},"name":"documentary","nullable":true,"type":"integer"},{"metadata":{},"name":"drama","nullable":true,"type":"integer"},{"metadata":{},"name":"fantasy","nullable":true,"type":"integer"},{"metadata":{},"name":"filmnoir","nullable":true,"type":"integer"},{"metadata":{},"name":"horror","nullable":true,"type":"integer"},{"metadata":{},"name":"musical","nullable":true,"type":"integer"},{"metadata":{},"name":"mystery","nullable":true,"type":"integer"},{"metadata":{},"name":"Romance","nullable":true,"type":"integer"},{"metadata":{},"name":"scifi","nullable":true,"type":"integer"},{"metadata":{},"name":"thriller","nullable":true,"type":"integer"},{"metadata":{},"name":"war","nullable":true,"type":"integer"},{"metadata":{},"name":"western","nullable":true,"type":"integer"},{"metadata":{},"name":"prediction","nullable":false,"type":"float"}],"type":"struct"},"tableIdentifier":null},{"name":"dataframePuntuacionUsuarioItemTestPrediccion","typeStr":"pyspark.sql.dataframe.DataFrame","schema":{"fields":[{"metadata":{},"name":"userid","nullable":true,"type":"integer"},{"metadata":{},"name":"itemid","nullable":true,"type":"integer"},{"metadata":{},"name":"rating","nullable":true,"type":"float"},{"metadata":{},"name":"age","nullable":true,"type":"integer"},{"metadata":{},"name":"gender","nullable":true,"type":"string"},{"metadata":{},"name":"occupation","nullable":true,"type":"string"},{"metadata":{},"name":"zipcode","nullable":true,"type":"string"},{"metadata":{},"name":"title","nullable":true,"type":"string"},{"metadata":{},"name":"unknown","nullable":true,"type":"integer"},{"metadata":{},"name":"action","nullable":true,"type":"integer"},{"metadata":{},"name":"adventure","nullable":true,"type":"integer"},{"metadata":{},"name":"animation","nullable":true,"type":"integer"},{"metadata":{},"name":"childrens","nullable":true,"type":"integer"},{"metadata":{},"name":"comedy","nullable":true,"type":"integer"},{"metadata":{},"name":"crime","nullable":true,"type":"integer"},{"metadata":{},"name":"documentary","nullable":true,"type":"integer"},{"metadata":{},"name":"drama","nullable":true,"type":"integer"},{"metadata":{},"name":"fantasy","nullable":true,"type":"integer"},{"metadata":{},"name":"filmnoir","nullable":true,"type":"integer"},{"metadata":{},"name":"horror","nullable":true,"type":"integer"},{"metadata":{},"name":"musical","nullable":true,"type":"integer"},{"metadata":{},"name":"mystery","nullable":true,"type":"integer"},{"metadata":{},"name":"Romance","nullable":true,"type":"integer"},{"metadata":{},"name":"scifi","nullable":true,"type":"integer"},{"metadata":{},"name":"thriller","nullable":true,"type":"integer"},{"metadata":{},"name":"war","nullable":true,"type":"integer"},{"metadata":{},"name":"western","nullable":true,"type":"integer"},{"metadata":{},"name":"prediction","nullable":false,"type":"float"}],"type":"struct"},"tableIdentifier":null}],"data":"<div class=\"ansiout\"></div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\"></div>"]}}],"execution_count":0},{"cell_type":"code","source":["# Describe método para rating y prediction\ndataframePuntuacionUsuarioItemEntrenamientoPrediccion.select(COL_PUNTUACION_RATING[0], COL_PUNTUACION_PREDICTION[0]).describe().show()\ndataframePuntuacionUsuarioItemTestPrediccion.select(COL_PUNTUACION_RATING[0], COL_PUNTUACION_PREDICTION[0]).describe().show()"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"ebf8d5e5-8651-47ec-a4f1-ae809147d36d"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[],"data":"<div class=\"ansiout\">+-------+------------------+------------------+\n|summary|            rating|        prediction|\n+-------+------------------+------------------+\n|  count|             70151|             70151|\n|   mean|3.5275762284215477| 3.412784401534105|\n| stddev|1.1261576211548854|0.7101456555841397|\n|    min|               1.0|       0.117314026|\n|    max|               5.0|         5.8057985|\n+-------+------------------+------------------+\n\n+-------+------------------+------------------+\n|summary|            rating|        prediction|\n+-------+------------------+------------------+\n|  count|             29797|             29797|\n|   mean|3.5369332483135887|3.4034927068218495|\n| stddev|1.1235080194830058|0.7044493595621335|\n|    min|               1.0|        -0.6050089|\n|    max|               5.0|         5.8593626|\n+-------+------------------+------------------+\n\n</div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\">+-------+------------------+------------------+\nsummary|            rating|        prediction|\n+-------+------------------+------------------+\n  count|             70151|             70151|\n   mean|3.5275762284215477| 3.412784401534105|\n stddev|1.1261576211548854|0.7101456555841397|\n    min|               1.0|       0.117314026|\n    max|               5.0|         5.8057985|\n+-------+------------------+------------------+\n\n+-------+------------------+------------------+\nsummary|            rating|        prediction|\n+-------+------------------+------------------+\n  count|             29797|             29797|\n   mean|3.5369332483135887|3.4034927068218495|\n stddev|1.1235080194830058|0.7044493595621335|\n    min|               1.0|        -0.6050089|\n    max|               5.0|         5.8593626|\n+-------+------------------+------------------+\n\n</div>"]}}],"execution_count":0},{"cell_type":"markdown","source":["RMSE para el conjunto de entrenamiento y el de test. Como se puede observar es más pequeño el primero como era de esperar. No obstante el valor es bastante alto en ambos casos:"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"6140ccf7-1ad5-45be-bd4e-503a62cce0c4"}}},{"cell_type":"code","source":["# Se obtiene el RMSE sobre los dos conjuntos\nrmseEntrenamiento = evaluatorRegression.evaluate(dataframePuntuacionUsuarioItemEntrenamientoPrediccion, {evaluatorRegression.metricName: 'rmse'})\nrmseTest = evaluatorRegression.evaluate(dataframePuntuacionUsuarioItemTestPrediccion, {evaluatorRegression.metricName: 'rmse'})\n\nprint (\"RMSE en training: \",rmseEntrenamiento)\nprint (\"RMSE en test: \",rmseTest)"],"metadata":{"application/vnd.databricks.v1+cell":{"title":"","showTitle":false,"inputWidgets":{},"nuid":"1db0b1a6-4fd5-4a2c-a4e5-ca8591a06aa1"}},"outputs":[{"output_type":"display_data","metadata":{"application/vnd.databricks.v1+output":{"datasetInfos":[],"data":"<div class=\"ansiout\">RMSE en training:  0.7977337528426899\nRMSE en test:  0.9274319847208257\n</div>","removedWidgets":[],"addedWidgets":{},"type":"html","arguments":{}}},"output_type":"display_data","data":{"text/html":["<style scoped>\n  .ansiout {\n    display: block;\n    unicode-bidi: embed;\n    white-space: pre-wrap;\n    word-wrap: break-word;\n    word-break: break-all;\n    font-family: \"Source Code Pro\", \"Menlo\", monospace;;\n    font-size: 13px;\n    color: #555;\n    margin-left: 4px;\n    line-height: 19px;\n  }\n</style>\n<div class=\"ansiout\">RMSE en training:  0.7977337528426899\nRMSE en test:  0.9274319847208257\n</div>"]}}],"execution_count":0}],"metadata":{"application/vnd.databricks.v1+notebook":{"notebookName":"Tarea_m8","dashboards":[],"notebookMetadata":{"pythonIndentUnit":2},"language":"python","widgets":{},"notebookOrigID":625738594920299}},"nbformat":4,"nbformat_minor":0}
